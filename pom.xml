<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
<!--	<parent>-->
<!--		<groupId>org.springframework.boot</groupId>-->
<!--		<artifactId>spring-boot-starter-parent</artifactId>-->
<!--		<version>3.0.5</version>-->
<!--		<relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
<!--	</parent>-->

	<groupId>io.github.yeshamavani</groupId>
	<version>0.0.1</version>
	<artifactId>springmono</artifactId>
	<packaging>pom</packaging>

	<name>springmono</name>
	<description>monorepo for springboot</description>

	<modules>
		<module>packages</module>
		<module>services</module>
	</modules>
	<properties>
		<java.version>17</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mainservice.version>0.0.1-SNAPSHOT</mainservice.version>
		<core.version>0.0.1-SNAPSHOT</core.version>

		<service.version>0</service.version>
		<version.update.enable>generate-sources</version.update.enable>
		<version.phase>none</version.phase>
		<service.name>-invalid-</service.name>

	</properties>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Yesha Mavani</name>
			<email>yesha.mavani@sourcefuse.com</email>
			<organization>Sourcefuse</organization>
			<organizationUrl>https://github.com/yeshamavani/springmono</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/yeshamavani/springmono.git</connection>
		<developerConnection>scm:git:ssh://github.com/yeshamavani/springmono.git</developerConnection>
		<url>http://github.com/yeshamavani/springmono/tree/master</url>
  </scm>

	<dependencies>
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-web</artifactId>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-test</artifactId>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.7</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-release-plugin</artifactId>-->
<!--				<version>3.0.0</version>-->
<!--				<configuration>-->
<!--					&lt;!&ndash;suppress UnresolvedMavenProperty &ndash;&gt;-->
<!--					<tag>v${releaseVersion}</tag>-->
<!--					<tagNameFormat>v@{project.version}</tagNameFormat>-->
<!--					<autoVersionSubmodules>true</autoVersionSubmodules>-->
<!--					&lt;!&ndash; releaseProfiles configuration will actually force a Maven profile-->
<!--						– the `releases` profile – to become active during the Release process. &ndash;&gt;-->
<!--					<releaseProfiles>releases</releaseProfiles>-->
<!--					<goals>deploy</goals>-->
<!--&lt;!&ndash;					<localCheckout>true</localCheckout>&ndash;&gt;-->
<!--&lt;!&ndash;					<pushChanges>false</pushChanges>&ndash;&gt;-->

<!--				</configuration>-->
<!--				<dependencies>-->
<!--					<dependency>-->
<!--						<groupId>org.apache.maven.plugins</groupId>-->
<!--						<artifactId>maven-scm-plugin</artifactId>-->
<!--						<version>2.0.0</version>-->
<!--					</dependency>-->
<!--				</dependencies>-->
<!--			</plugin>-->

			<plugin>
				<groupId>com.github.danielflower.mavenplugins</groupId>
				<artifactId>multi-module-maven-release-plugin</artifactId>
				<version>3.6.4</version>
				<configuration>
<!--					<serverId>github.com</serverId>-->
					<knownHosts>~/.ssh/known_hosts</knownHosts>
					<releaseGoals>
						<releaseGoal>deploy</releaseGoal>
					</releaseGoals>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>2.0.0</version>

			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<phase>${version.phase}</phase>
						<goals>
							<goal>set</goal>
						</goals>
						<id>update-version</id>
						<configuration>
							<generateBackupPoms>false</generateBackupPoms>
							<artifactId>${service.name}*</artifactId>
							<newVersion>${service.version}</newVersion>
						</configuration>
					</execution>

				</executions>
			</plugin>
		</plugins>
	</build>

</project>
